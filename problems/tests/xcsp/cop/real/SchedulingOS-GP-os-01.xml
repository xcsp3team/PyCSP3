<instance format="XCSP3" type="COP">
  <variables>
    <array id="s" note="s[i][j] is the start time of the jth operation for the ith job" size="[3][3]"> 0..3000 </array>
    <array id="d" note="d[i][j] is the duration of the jth operation of the ith job" size="[3][3]">
      <domain for="d[0][]"> 6 333 661 </domain>
      <domain for="d[1][]"> 168 343 489 </domain>
      <domain for="d[2][]"> 171 324 505 </domain>
    </array>
    <array id="mc" note="mc[i][j] is the machine used for the jth operation of the ith job" size="[3][3]"> 0..2 </array>
    <array id="sd" note="sd[i][k] is the start (dual) time of the kth machine when used for the ith job" size="[3][3]"> 0..3000 </array>
  </variables>
  <constraints>
    <group note="operations must be ordered on each job">
      <ordered>
        <list> %0 %1 %2 </list>
        <lengths> %3 %4 </lengths>
        <operator> le </operator>
      </ordered>
      <args> s[0][] d[0][0] d[0][1] </args>
      <args> s[1][] d[1][0] d[1][1] </args>
      <args> s[2][] d[2][0] d[2][1] </args>
    </group>
    <group note="each machine must be used for each job">
      <allDifferent> %0 %1 %2 </allDifferent>
      <args> mc[0][] </args>
      <args> mc[1][] </args>
      <args> mc[2][] </args>
    </group>
    <group>
      <extension>
        <list> %0 %1 </list>
        <supports> (0,661)(1,6)(2,333) </supports>
      </extension>
      <args> mc[0][0] d[0][0] </args>
      <args> mc[0][1] d[0][1] </args>
      <args> mc[0][2] d[0][2] </args>
    </group>
    <group>
      <extension>
        <list> %0 %1 </list>
        <supports> (0,168)(1,489)(2,343) </supports>
      </extension>
      <args> mc[1][0] d[1][0] </args>
      <args> mc[1][1] d[1][1] </args>
      <args> mc[1][2] d[1][2] </args>
    </group>
    <group>
      <extension>
        <list> %0 %1 </list>
        <supports> (0,171)(1,505)(2,324) </supports>
      </extension>
      <args> mc[2][0] d[2][0] </args>
      <args> mc[2][1] d[2][1] </args>
      <args> mc[2][2] d[2][2] </args>
    </group>
    <block class="channeling">
      <group>
        <element>
          <list> sd[0][] </list>
          <index> %0 </index>
          <value> %1 </value>
        </element>
        <args> mc[0][0] s[0][0] </args>
        <args> mc[0][1] s[0][1] </args>
        <args> mc[0][2] s[0][2] </args>
      </group>
      <group>
        <element>
          <list> sd[1][] </list>
          <index> %0 </index>
          <value> %1 </value>
        </element>
        <args> mc[1][0] s[1][0] </args>
        <args> mc[1][1] s[1][1] </args>
        <args> mc[1][2] s[1][2] </args>
      </group>
      <group>
        <element>
          <list> sd[2][] </list>
          <index> %0 </index>
          <value> %1 </value>
        </element>
        <args> mc[2][0] s[2][0] </args>
        <args> mc[2][1] s[2][1] </args>
        <args> mc[2][2] s[2][2] </args>
      </group>
    </block>
    <block note="no overlap on resources">
      <noOverlap>
        <origins> sd[][0] </origins>
        <lengths> 661 168 171 </lengths>
      </noOverlap>
      <noOverlap>
        <origins> sd[][1] </origins>
        <lengths> 6 489 505 </lengths>
      </noOverlap>
      <noOverlap>
        <origins> sd[][2] </origins>
        <lengths> 333 343 324 </lengths>
      </noOverlap>
    </block>
    <group class="redundant-constraints">
      <intension> ge(add(%0,%1),1000) </intension>
      <args> s[0][2] d[0][2] </args>
      <args> s[1][2] d[1][2] </args>
      <args> s[2][2] d[2][2] </args>
    </group>
  </constraints>
  <objectives>
    <minimize note="minimizing the makespan" type="maximum"> add(s[0][2],d[0][2]) add(s[1][2],d[1][2]) add(s[2][2],d[2][2]) </minimize>
  </objectives>
</instance>
